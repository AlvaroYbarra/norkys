import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;

public class Proyectonorkys {
    public Scanner scanner = new Scanner(System.in);
    public String[] usuarios = new String[4];
    public boolean sesionIniciada = false;

    public double igv = 0.18;

    public double[] subtotalProductos = new double[4];
    public double[] subtotalIgvProductos = new double[4];
    public double[] totalPagarProductos = new double[4];

    public String niciarSesionExistente( ) {
        Scanner scanner = new Scanner(System.in);
        System.out.println("¿Qué desea hacer?");
        System.out.println("1.- Iniciar sesión");
        System.out.println("2.- Crear cuenta");
        System.out.println("3.- Iniciar como invitado");
        System.out.print("Seleccione una opción (1/2/3): ");
        int opcion = scanner.nextInt();
        scanner.nextLine();

        switch (opcion) {
            case 1:
                return iniciarSesionExistente();
            case 2:
                crearCuenta();
                return "Cuenta creada exitosamente. Por favor inicie sesión.";
            case 3:
                return "Bienvenido, ha ingresado como invitado.";
            default:
                return "Opción no válida";
        }
    }

    public String iniciarSesionExistente() {
        System.out.print("Ingrese correo: ");
        String correo = scanner.nextLine();
        System.out.print("Ingrese su contraseña: ");
        String contrasena = scanner.nextLine();

        if ("ybarra@gmail.com".equals(correo) && "123".equals(contrasena)) {
            sesionIniciada = true;
            this.usuario();
            this.menu();
            return "Inicio de sesión exitoso. ¡Bienvenido a Norkys!";
        } else {
            return "Inicio de sesión fallido. Verifique sus datos.";
        }
    }

    public void crearCuenta() {
        System.out.print("Ingrese correo para su cuenta: ");
        String correo = scanner.nextLine();
        System.out.print("Ingrese una contraseña: ");
        String contrasena = scanner.nextLine();


        System.out.println("Cuenta creada exitosamente.");
    }

    public void usuario() {
        System.out.print("Por favor, ingrese su nombre: ");
        usuarios[0] = scanner.nextLine();
        System.out.print("Ingrese su apellido: ");
        usuarios[1] = scanner.nextLine();
        System.out.print("Ingrese su número de teléfono: ");
        usuarios[2] = scanner.nextLine();
        System.out.print("Ingrese su DNI: ");
        usuarios[3] = scanner.nextLine();
    }

    public void menu() {
        if (sesionIniciada) {
            boolean opciones = true;
            while (opciones) {
                System.out.println("Elija una de las siguientes opciones (1/2/3): ");
                System.out.println("1.- Carta de productos");
                System.out.println("2.- Atención al cliente");
                System.out.println("3.- Salir");
                System.out.print("Seleccione una opción: ");
                int opcion = scanner.nextInt();
                scanner.nextLine();

                switch (opcion) {
                    case 1:
                        this.mostrarCartaProductos();
                        break;
                    case 2:
                        this.contactar();
                        break;
                    case 3:
                        opciones = false;
                        System.out.println("Gracias por visitarnos, vuelva pronto.");
                        break;
                    default:
                        System.out.println("Ingrese una de las opciones válidas");
                        break;
                }
            }
        }
    }

    public void mostrarCartaProductos() {
        System.out.println("----- Carta de Productos -----");
        System.out.println("1. Combos de Pollo a la Brasa");
        System.out.println("2. Combos de Burger");
        System.out.println("3. Combos de Parrilla");
        System.out.println("4. Bebidas");
        System.out.print("Seleccione una categoría (1/2/3/4): ");
        int opcion = scanner.nextInt();
        scanner.nextLine();

        switch (opcion) {
            case 1:
                this.elegirComboPolloBrasa();
                break;
            case 2:
                this.elegirComboBurger();
                break;
            case 3:
                this.elegirComboParrilla();
                break;
            case 4:
                this.elegirBebida();
                break;
            default:
                System.out.println("Opción no válida");
                break;
        }
    }

    public void elegirComboPolloBrasa() {
        double[] preciosCombos = {0.00, 30.00, 50.00, 80.00};

        System.out.println("Combos disponibles de pollo a la brasa:");
        System.out.println("1. 1/4 de pollo + papas + ensalada - S/ 30.00");
        System.out.println("2. 1/2 de pollo + papas + ensalada - S/ 50.00");
        System.out.println("3. 1 pollo + papas + ensalada - S/ 80.00");
        System.out.print("Seleccione su pedido (1/2/3): ");
        int tipoComboBrasa = scanner.nextInt();

        if (tipoComboBrasa < 1 || tipoComboBrasa > 3) {
            System.out.println("Opción de combo no válida");
            return;
        }

        System.out.print("Ingrese la cantidad de combos pollo a la brasa que va comprar: ");
        int cantidadCombosBrasa = scanner.nextInt();

        if (cantidadCombosBrasa <= 0) {
            System.out.println("Cantidad no válida");
            return;
        }

        double subtotal = preciosCombos[tipoComboBrasa] * cantidadCombosBrasa;
        double subtotalIgv = subtotal * igv;
        double total = subtotal + subtotalIgv;

        subtotalProductos[0] += subtotal;
        subtotalIgvProductos[0] += subtotalIgv;
        totalPagarProductos[0] += total;

        System.out.println("Su compra de combos de pollo a la brasa ha sido registrada.");
    }

    public void elegirComboBurger() {
        double[] preciosCombos = {0.00, 19.00, 22.00, 27.00};

        System.out.println("Combos disponibles de burger:");
        System.out.println("1. Burger clasica + papas - S/ 19.00");
        System.out.println("2. Burger suprema + papas - S/ 22.00");
        System.out.println("3. Burger extrema + papas - S/ 27.00");
        System.out.print("Seleccione su pedido (1/2/3): ");
        int tipoComboburguer = scanner.nextInt();

        if (tipoComboburguer < 1 || tipoComboburguer > 3) {
            System.out.println("Opción de combo no válida");
            return;
        }

        System.out.print("Ingrese la cantidad de combos burger que va comprar: ");
        int cantidadCombosburguer = scanner.nextInt();

        if (cantidadCombosburguer <= 0) {
            System.out.println("Cantidad no válida");
            return;
        }

        double subtotal = preciosCombos[tipoComboburguer] * cantidadCombosburguer;
        double subtotalIgv = subtotal * igv;
        double total = subtotal + subtotalIgv;

        subtotalProductos[1] += subtotal;
        subtotalIgvProductos[1] += subtotalIgv;
        totalPagarProductos[1] += total;

        System.out.println("Su compra de burguer ha sido registrada.");
    }

    public void elegirComboParrilla() {
        double[] preciosCombos = {0.00, 35.00, 38.00, 44.00};

        System.out.println("Combos disponibles de parrilla:");
        System.out.println("1. Pechuga a la parrilla - S/ 35.00");
        System.out.println("2. Churrasco a la parrilla - S/ 38.00");
        System.out.println("3. Chuleta a la parrilla - S/ 44.00");
        System.out.print("Seleccione su pedido (1/2/3): ");
        int tipoComboParrilla = scanner.nextInt();

        if (tipoComboParrilla < 1 || tipoComboParrilla > 3) {
            System.out.println("Opción de parrilla no válida");
            return;
        }

        System.out.print("Ingrese la cantidad de parrilla que va comprar: ");
        int cantidadCombosParrilla = scanner.nextInt();

        if (cantidadCombosParrilla <= 0) {
            System.out.println("Cantidad no válida");
            return;
        }

        double subtotal = preciosCombos[tipoComboParrilla] * cantidadCombosParrilla;
        double subtotalIgv = subtotal * igv;
        double total = subtotal + subtotalIgv;

        subtotalProductos[2] += subtotal;
        subtotalIgvProductos[2] += subtotalIgv;
        totalPagarProductos[2] += total;

        System.out.println("Su compra de parrilla ha sido registrada.");
    }

    public void elegirBebida() {
        double[] preciosBebidas = {0.00, 14.00, 14.00, 6.50};

        System.out.println("Bebidas disponibles:");
        System.out.println("1. Gaseosa Inka Cola 1.5L - S/ 14.00");
        System.out.println("2. Gaseosa Coca Cola 1.5L - S/ 14.00");
        System.out.println("3. Agua San Luis 625 mL - S/ 6.50");
        System.out.print("Seleccione su pedido (1/2/3): ");
        int tipoBebida = scanner.nextInt();

        if (tipoBebida < 1 || tipoBebida > 3) {
            System.out.println("Opción de bebida no válida");
            return;
        }

        System.out.print("Ingrese la cantidad de bebidas que va comprar: ");
        int cantidadBebida = scanner.nextInt();

        if (cantidadBebida <= 0) {
            System.out.println("Cantidad no válida");
            return;
        }

        double subtotal = preciosBebidas[tipoBebida] * cantidadBebida;
        double subtotalIgv = subtotal * igv;
        double total = subtotal + subtotalIgv;

        subtotalProductos[3] += subtotal;
        subtotalIgvProductos[3] += subtotalIgv;
        totalPagarProductos[3] += total;

        System.out.println("Su compra de bebidas ha sido registrada.");
    }

    public void contactar() {

    }

    public void pagarProductos() {
        double totalDelSubtotal = 0.0;
        double totalDeIgv = 0.0;
        double total = 0.0;

        for (int i = 0; i < subtotalProductos.length; i++) {
            totalDelSubtotal += subtotalProductos[i];
            totalDeIgv += subtotalIgvProductos[i];
            total += totalPagarProductos[i];
        }

        try {
            File archivo = new File("boleta_norkys.txt");
            FileWriter escritor = new FileWriter(archivo);

            escritor.write("---- BOLETA DE VENTA -----\n");

            for (int i = 0; i < subtotalProductos.length; i++) {
                if (subtotalProductos[i] > 0) {
                    escritor.write(String.format("Producto: %d - Subtotal: S/ %.2f - IGV: S/ %.2f - Total: S/ %.2f\n", i+1, subtotalProductos[i], subtotalIgvProductos[i], totalPagarProductos[i]));
                }
            }

            escritor.write(String.format(" SUBTOTAL: S/ %.2f\n", totalDelSubtotal));
            escritor.write(String.format(" IGV: S/ %.2f\n", totalDeIgv));
            escritor.write(String.format(" TOTAL: S/ %.2f\n", total));

            escritor.write("----------- Gracias por su compra! Vuelva pronto. ------------\n");

            escritor.close();
            System.out.println("Boleta de venta generada correctamente.");
        } catch (IOException e) {
            System.out.println("Error al generar la boleta de venta.");
            e.printStackTrace();
        }
    }


    public static void main(String[] args) {
        Proyectonorkys pollo = new Proyectonorkys();
        pollo.niciarSesionExistente();
    }
}


